#!/bin/bash


# exit on error
set -e

ADMIN_USER="admin"
KEY_FILENAME="id_rsa"
PASSPHRASE=""

INSTALL_POSTGRES="apt install -y postgresql postgresql-contrib"

if [[ -e ".sshpass" ]]; then
    PASSPHRASE="$(sed 's/^[[:space:]]*//; s/[[:space:]]*$//' .sshpass)"
fi

if ! getent group "$ADMIN_USER" &>/dev/null; then
    echo -n ":: creating group $ADMIN_USER..."
    groupadd -r -f "$ADMIN_USER"
    echo "done"
fi

if ! id "$ADMIN_USER" &>/dev/null; then
    echo -n ":: creating user $ADMIN_USER..."
    useradd -r -m -s /bin/bash -g "$ADMIN_USER" $ADMIN_USER
    echo "done"
    echo -n ":: locking user $ADMIN_USER..."
    passwd -l $ADMIN_USER &>/dev/null
    echo "done"
fi
if [ ! -d /home/$ADMIN_USER/.ssh ]; then
    echo -n ":: creating .ssh directory and keypair for user $ADMIN_USER..."
    mkdir -p /home/$ADMIN_USER/.ssh
    chown $ADMIN_USER:$ADMIN_USER /home/$ADMIN_USER/.ssh
    chmod 700 /home/$ADMIN_USER/.ssh
    # Generate SSH keypair
    ssh-keygen -t rsa -b 4096 -C "$ADMIN_USER" -f "/home/$ADMIN_USER/.ssh/$KEY_FILENAME" -N "$PASSPHRASE"
    echo "done"
fi

bash -c "$INSTALL_POSTGRES"

exists=$(su - postgres -c "psql -tqc \"SELECT count(1) FROM pg_catalog.pg_user WHERE usename = '"$ADMIN_USER"'\"")
if [ $exists = 0 ]; then
    echo ":: creating postgres superuser $ADMIN_USER"
    su - postgres -c "createuser --superuser $ADMIN_USER"
fi
exists=$(su - postgres -c "psql -lqt | cut -d \| -f 1 | grep -w $ADMIN_USER | wc -l")
if [ $exists = 0 ]; then
    echo ":: creating database for user $ADMIN_USER"
    su - postgres -c "createdb -O $ADMIN_USER $ADMIN_USER"
fi

# lock postgres system account (use the just created superuser instead)
passwd -l postgres
